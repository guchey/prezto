#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...
command_exists() {
	command -v "$@" >/dev/null 2>&1
}

#==========================================================
#                  Your local commandline tool definication
#                  ========================================
export PATH=$PATH:~/bin

#==========================================================
#                                                  Homebrew
#                                                  ========
alias brew="PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin brew"
export PATH="/usr/local/sbin:$PATH"

#==========================================================
#                                                       Git
#                                                       ===
if ! command_exists ghq; then
    echo "intsall ghq"
    brew install ghq
fi
if ! command_exists hub; then
    echo "intsall hub"
    brew install hub
fi
if ! command_exists peco; then
    echo "intsall peco"
    brew install peco
fi
if ! command_exists tig; then
    echo "intsall tig"
    brew install tig
fi
alias gitd='cd $(ghq root)/$(ghq list | peco)'
alias github='hub browse $(ghq list | peco | cut -d "/" -f 2,3)'

#=====================================================
#                                                   Go
#                                                   ==
if ! command_exists go; then
    echo "intsall go"
    brew install go
fi

#==========================================================
#                                                      Node
#                                                      ====
if ! command_exists nodebrew; then
    echo "intsall nodebrew"
    brew install nodebrew
    nodebrew install-binary latest
    nodebrew use latest
fi
NODEBREW_HOME=/usr/local/var/nodebrew/current
export NODEBREW_HOME
export NODEBREW_ROOT=/usr/local/var/nodebrew
export PATH=$PATH:$NODEBREW_HOME/bin
if ! command_exists yarn; then
    echo "intsall yarn"
    npm install -g yarn 
fi
#==========================================================
#                                                    Python
#                                                    ======
if ! command_exists pyenv; then;
    echo "intsall pyenv"
    brew install pyenv
    pyenv install -v 2.7.16
    pyenv install -v 3.7.3
fi
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
pyenv global 2.7.16
if ! command_exists pipenv; then
    echo "intsall pipenv"
    pip install pipenv
fi
export PIPENV_VENV_IN_PROJECT=1

#==========================================================
#                                          Google cloud SDK
#                                          ================
if [ ! -f ~/google-cloud-sdk/path.zsh.inc ]; then
    echo "intsall google-cloud-sdk"
    curl https://sdk.cloud.google.com | zsh
fi
# The next line updates PATH for the Google Cloud SDK.
if [ -f ~/google-cloud-sdk/path.zsh.inc ]; then . ~/google-cloud-sdk/path.zsh.inc; fi
# The next line enables shell command completion for gcloud.
if [ -f ~/google-cloud-sdk/completion.zsh.inc ]; then . ~/google-cloud-sdk/completion.zsh.inc; fi

#==========================================================
#                                                Kubernetes
#                                                ==========
alias -g kP='`kubectl get pod | tail -n +2 | peco | awk '\''{print $1}'\''`'
alias kbe="kubectl exec -it kP"
alias kbap="kubectl apply -f"
alias kbl="kubectl logs -f kP"

#==========================================================
#                                                    Docker
#                                                    ======
if ! command_exists docker; then
    echo "intsall docker"
    brew install docker
fi
if ! command_exists dockle; then
    echo "intsall dockle"
    brew install goodwithtech/dockle/dockle
fi
alias -g dP='`docker ps -a | rmheader | peco | awk '\''{print $1}'\''`'
alias -g dI='`docker images | rmheader | peco | awk '\''{print $3}'\''`'
alias dkx='docker stop `docker ps -a | rmheader | grep -v Exited | peco | awk '\''{print $1}'\''`'
alias dkl='docker logs dP'
alias dkrm='docker rm -f dP'
alias dke='docker exec -it dP'
alias dkprn='docker system prune --all --volumes'

#==========================================================
#                                                Color diff
#                                                ==========
if ! command_exists colordiff; then
    echo "intsall colordiff"
    brew install colordiff
fi
alias diff='colordiff -u'
alias diffy='colordiff -y --suppress-common-lines'

#==========================================================
#                                                      tree
#                                                      ====
if ! command_exists tree; then
    echo "intsall tree"
    brew install tree
fi

function setTitle() {
    echo -e "\033];$1\007"
}
alias title=setTitle

#==========================================================
#                                                    groovy
#                                                    ======
if ! command_exists groovy; then
    echo "intsall groovy"
    brew install groovy
fi
export GROOVY_HOME=/usr/local/opt/groovy/libexec

#==========================================================
#                                             Editor config
#                                             =============
export EDITOR='vim'
export VISUAL='vim'
export PAGER='less'

#==========================================================
#                                                virtualbox
#                                                ==========
# https://shoji014.com/virtualbox-error/
#if ! command_exists virtualbox; then
#    echo "intsall virtualbox"
#    brew cask install virtualbox
#fi

#==========================================================
#                                                   vagrant
#                                                   =======
if ! command_exists vagrant; then
    echo "intsall vagrant"
    brew cask install vagrant
fi


#==========================================================
#                                                   ansible
#                                                   =======
if ! command_exists ansible; then
    echo "intsall ansible"
    brew install ansible
fi

if [ ! -f /etc/ansible/hosts ]; then
    sudo mkdir -p /etc/ansible
    cat <<EOF | sudo tee /etc/ansible/hosts > /dev/null
[localhost]
127.0.0.1 ansible_connection=local
EOF
fi

if ! command_exists sshpass; then
    brew install http://git.io/sshpass.rb
fi

#==========================================================
#                                                 Pipe util
#                                                 =========
alias rmheader='awk '\''NR>1{print $0}'\'
alias upper="tr '[a-z]' '[A-Z]'"
alias cl1='awk '\''{print $1}'\'''
alias cl2='awk '\''{print $2}'\'''
alias cl3='awk '\''{print $3}'\'''
alias cl4='awk '\''{print $4}'\'''
alias cl5='awk '\''{print $5}'\'''
alias cl6='awk '\''{print $6}'\'''

#==========================================================
#                                              Suffix Alias
#                                              ============
alias -s py=python
function extract() {
  case $1 in
    *.tar.gz|*.tgz) tar xzvf $1;;
    *.tar.xz) tar Jxvf $1;;
    *.zip) unzip $1;;
    *.lzh) lha e $1;;
    *.tar.bz2|*.tbz) tar xjvf $1;;
    *.tar.Z) tar zxvf $1;;
    *.gz) gzip -d $1;;
    *.bz2) bzip2 -dc $1;;
    *.Z) uncompress $1;;
    *.tar) tar xvf $1;;
    *.arj) unarj $1;;
esac
}
alias -s {gz,tgz,zip,lzh,bz2,tbz,Z,tar,arj,xz}=extract
